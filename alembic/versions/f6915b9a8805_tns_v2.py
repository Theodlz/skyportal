"""tns-v2

Revision ID: f6915b9a8805
Revises: 550fbafe6a2c
Create Date: 2024-02-23 10:06:16.551969

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f6915b9a8805'
down_revision = '550fbafe6a2c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'tnsrobot_users',
        sa.Column('tnsrobot_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('coauthor', sa.Boolean(), nullable=False),
        sa.Column('auto_report', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['tnsrobot_id'], ['tnsrobots.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tnsrobot_id', 'user_id'),
    )
    op.create_index(
        op.f('ix_tnsrobot_users_created_at'),
        'tnsrobot_users',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'tnsrobots_groups',
        sa.Column('tnsrobot_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('owner', sa.Boolean(), nullable=False),
        sa.Column('auto_report', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['tnsrobot_id'], ['tnsrobots.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tnsrobot_id', 'group_id'),
    )
    op.create_index(
        op.f('ix_tnsrobots_groups_created_at'),
        'tnsrobots_groups',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'tns_submissions',
        sa.Column('tnsrobot_id', sa.Integer(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('custom_reporting_string', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('archival', sa.Boolean(), nullable=False),
        sa.Column('archival_comment', sa.String(), nullable=True),
        sa.Column('submission_id', sa.Integer(), nullable=True),
        sa.Column('auto_submission', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['tnsrobot_id'], ['tnsrobots.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_tns_submissions_created_at'),
        'tns_submissions',
        ['created_at'],
        unique=False,
    )
    op.add_column(
        'tnsrobots', sa.Column('acknowledgments', sa.String(), nullable=False)
    )
    # we don't want the existing TNSrobots to have no owner group because we are removing the group_id column
    # so, we create entries in the tnsrobots_groups table for the current owner groups, with owner=True and auto_report=False
    op.execute(
        """
        INSERT INTO tnsrobots_groups (tnsrobot_id, group_id, owner, auto_report, created_at, modified)
        SELECT id, group_id, true, false, now(), now() FROM tnsrobots
        """
    )

    op.drop_index('ix_tnsrobots_group_id', table_name='tnsrobots')
    op.drop_constraint('tnsrobots_group_id_fkey', 'tnsrobots', type_='foreignkey')
    op.drop_column('tnsrobots', 'auto_reporters')
    op.drop_column('tnsrobots', 'group_id')
    op.drop_column('tnsrobots', 'auto_report_group_ids')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'tnsrobots',
        sa.Column(
            'auto_report_group_ids',
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=True,
            comment='List of group IDs to report from',
        ),
    )
    op.add_column(
        'tnsrobots',
        sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        'tnsrobots',
        sa.Column('auto_reporters', sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        'tnsrobots_group_id_fkey',
        'tnsrobots',
        'groups',
        ['group_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_index('ix_tnsrobots_group_id', 'tnsrobots', ['group_id'], unique=False)
    op.drop_column('tnsrobots', 'acknowledgments')
    op.drop_index(op.f('ix_tns_submissions_created_at'), table_name='tns_submissions')
    op.drop_table('tns_submissions')
    op.drop_index(op.f('ix_tnsrobots_groups_created_at'), table_name='tnsrobots_groups')
    op.drop_table('tnsrobots_groups')
    op.drop_index(op.f('ix_tnsrobot_users_created_at'), table_name='tnsrobot_users')
    op.drop_table('tnsrobot_users')
    # ### end Alembic commands ###
